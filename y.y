%{
	#include<stdio.h>
	extern int yylineno; 
%}

/*NOTAS MUSICALES*/

%token C_NOTA     /*Do */
%token D_NOTA	/*Re*/
%token E_NOTA	/*Mi*/
%token F_NOTA	/*Fa*/
%token G_NOTA	/*Sol*/
%token A_NOTA	/*La*/
%token B_NOTA	/*Si*/

%token C_SOSTENIDO 
%token D_SOSTENIDO 	
%token E_SOSTENIDO 	
%token F_SOSTENIDO 	
%token G_SOSTENIDO 	
%token A_SOSTENIDO 	
%token B_SOSTENIDO 	

%token C_MAYOR   
%token D_MAYOR 	
%token E_MAYOR 	
%token F_MAYOR 	
%token G_MAYOR 	
%token A_MAYOR 	
%token B_MAYOR 	

%token C_SOSTENIDO_MAYOR    
%token D_SOSTENIDO_MAYOR  	
%token E_SOSTENIDO_MAYOR  	
%token F_SOSTENIDO_MAYOR  	
%token G_SOSTENIDO_MAYOR 	
%token A_SOSTENIDO_MAYOR  	
%token B_SOSTENIDO_MAYOR  	

%token C_MENOR
%token D_MENOR 	
%token E_MENOR 	
%token F_MENOR 	
%token G_MENOR 	
%token A_MENOR 	
%token B_MENOR 	

%token C_SOSTENIDO_MENOR    
%token D_SOSTENIDO_MENOR 	
%token E_SOSTENIDO_MENOR  	
%token F_SOSTENIDO_MENOR  	
%token G_SOSTENIDO_MENOR  	
%token A_SOSTENIDO_MENOR  	
%token B_SOSTENIDO_MENOR  	

%token NEGRA
%token BLANCA
%token CORCHEA
%token SEMICORCHEA

%token INICIAR_COMPAS
%token FINALIZAR_COMPAS
%token INICIAR_MUSICA
%token FINALIZAR_MUSICA

%token VARIABLE

%token F_PRINCIPAL
%token N_VARIABLE
%token NUMERO
%token COMENTARIO_I
%token COMENTARIO_F
%token NOMBRE
%token PUNTO_COMA
%token COMENZAR
%token FINALIZAR_PROCEDIMIENTO
%token PARENTESIS_A
%token PARENTESIS_C

%token SET
%token DEF
%token IGUAL
%token DECREMENTO
%token INCREMENTO
%token MENOR
%token MAYOR
%token DISTINTO
%token CONDICION
%token CONTRARIO
%token FIN_CONDICION

%token EJECUTE

%token LOOP
%token FIN_LOOP
%token INI_LOOP
%token COMA
%token ENTONCES

%start PRINCIPIO



%% 

	PRINCIPIO: 
				INICIAR_MUSICA PUNTO_COMA PROCEDIMIENTO FUNCION_PRINCIPAL FINALIZAR_MUSICA PUNTO_COMA;
				
	PROCEDIMIENTO: 
				NOM PARENTESIS_A PARENTESIS_C COMENZAR EXPRESION FINALIZAR_PROCEDIMIENTO NOM PUNTO_COMA 
				|NOM PARENTESIS_A PARENTESIS_C COMEN COMENZAR EXPRESION FINALIZAR_PROCEDIMIENTO NOM PUNTO_COMA 
				|COMEN
				|PROCEDIMIENTO PROCEDIMIENTO;	
				
	FUNCION_PRINCIPAL:
				F_PRINCIPAL PARENTESIS_A PARENTESIS_C COMENZAR EXPRESION FINALIZAR_PROCEDIMIENTO FUNCION_PRINCIPAL PUNTO_COMA
				|F_PRINCIPAL PARENTESIS_A PARENTESIS_C COMEN COMENZAR EXPRESION FINALIZAR_PROCEDIMIENTO FUNCION_PRINCIPAL PUNTO_COMA;
							
	CICLO:
				LOOP PARENTESIS_A ENTRADA COMA ENTRADA COMA ENTRADA COMA ENTRADA COMA ENTRADA PARENTESIS_C INI_LOOP EXPRESION FIN_LOOP PUNTO_COMA
				|LOOP PARENTESIS_A ENTRADA COMA ENTRADA COMA ENTRADA COMA ENTRADA COMA ENTRADA PARENTESIS_C COMEN INI_LOOP EXPRESION FIN_LOOP PUNTO_COMA
				
				|CICLO CICLO; 
				
	COND: 		
				CONDICION PARENTESIS_A VARIABLE COMA COMPARACIONES COMA NUMERO PARENTESIS_C ENTONCES EXPRESION CONTRARIO EXPRESION FIN_CONDICION PUNTO_COMA
				|CONDICION PARENTESIS_A VARIABLE COMA COMPARACIONES COMA NUMERO PARENTESIS_C COMEN ENTONCES EXPRESION CONTRARIO EXPRESION FIN_CONDICION PUNTO_COMA
				| COND COND ;
				
	COMPARACIONES:
				MAYOR
				| MENOR
				|IGUAL
				|DISTINTO;
	
	EXPRESION: 
				INVOKEPROCEDIMIENETO 
				| VAR 
				| COMEN 
				| CICLO 
				| COND
				| COMPAS
				| EXPRESION EXPRESION;	
				
	
	
	COMEN:
				COMENTARIO_I PALABRAS COMENTARIO_F 
				| COMENTARIO_I COMENTARIO_F;
	
	PALABRAS: 	PALABRAS PALABRAS 
				| NOM
				| NUMERO;
	
	VAR:		SET VARIABLE IGUAL VARIABLE PUNTO_COMA
				| SET VARIABLE IGUAL NUMERO PUNTO_COMA
				| VARIABLE ASIGNACION PUNTO_COMA
				| DEF VARIABLE IGUAL VARIABLE PUNTO_COMA
				| DEF VARIABLE PUNTO_COMA
				| VARIABLE PUNTO_COMA;
				| DEF VARIABLE IGUAL NUMERO PUNTO_COMA;
	
	ASIGNACION: DECREMENTO
				| INCREMENTO;

	ENTRADA:
				NUMERO
				| VARIABLE;
	
	INVOKEPROCEDIMIENETO:
				EJECUTE NOM PUNTO_COMA;
				
	COMPAS: 
				INICIAR_COMPAS RITMO FINALIZAR_COMPAS;
				
	RITMO:
				NOTAS FIGURAMUSICAL
				|RITMO RITMO;
				
	NOTAS: 		
				C_NOTA | D_NOTA| E_NOTA| F_NOTA | G_NOTA| A_NOTA| B_NOTA
				| C_SOSTENIDO | D_SOSTENIDO| E_SOSTENIDO| F_SOSTENIDO| G_SOSTENIDO| A_SOSTENIDO | B_SOSTENIDO
				| C_MAYOR | D_MAYOR| E_MAYOR | F_MAYOR | G_MAYOR | A_MAYOR| B_MAYOR
				| C_SOSTENIDO_MAYOR | D_SOSTENIDO_MAYOR | E_SOSTENIDO_MAYOR | F_SOSTENIDO_MAYOR| G_SOSTENIDO_MAYOR | A_SOSTENIDO_MAYOR| B_SOSTENIDO_MAYOR
				| C_MENOR | D_MENOR | E_MENOR| F_MENOR| G_MENOR| A_MENOR | B_MENOR
				| C_SOSTENIDO_MENOR | D_SOSTENIDO_MENOR  | E_SOSTENIDO_MENOR  | F_SOSTENIDO_MENOR | G_SOSTENIDO_MENOR  | A_SOSTENIDO_MENOR | B_SOSTENIDO_MENOR;
				
	FIGURAMUSICAL:
				NEGRA
				| BLANCA
				| CORCHEA
				| SEMICORCHEA;
				
	NOM:
		NOMBRE
		| VARIABLE;

%%

main(){
	if(yyparse()==0)
	printf("\nAnalisis Sintactico concluido sin errores\n");
}
yyerror(char* mensaje){
	printf("Error sintactico %s",mensaje);
	printf(" en linea %d\n",yylineno);
}